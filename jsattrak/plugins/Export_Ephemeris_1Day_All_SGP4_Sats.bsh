// Shawn E. Gano
// 18 April 2016
// Exports the ephemeris of all the regular satellites (that use the SGP4 propagator) to file(s) named  "satellite name".txt (created where JSatTrak.jar / .exe is located)
//
//   File contains: UTC, x, y, z, dx, dy, dz (J2000.0 meters and m/s)

import jsattrak.objects.SatelliteTleSGP4;
import jsattrak.utilities.StateVector;
import name.gano.astro.time.Time;
import name.gano.astro.AstroConst;

// propagation parameters
stepSizeSeconds = 300; // every 5 minutes
stopPropagationSeconds = 86400; // 86400 seconds = 1 day

// start time -- get the current time (current JulianDate)
// Time currentJulianDate
Time startTime = jsattrak.currentJulianDate;
propSteps = (int)(stopPropagationSeconds/stepSizeSeconds);


// get satellite hash
satHash =  jsattrak.getSatHash();

// loop through all the satellites
for(String str : satHash.keys())
{ 
	sat = satHash.get(str); // get the sat from the hash

	if (sat instanceof SatelliteTleSGP4) 
	{
		System.out.println("SGP4 Sat:" + str);
		
		// open file and write data
		PrintWriter writer = new PrintWriter(str.trim() + ".txt", "UTF-8");
		
		// create header with sat name and data legend
		writer.println("# Satellite: " + str.trim() );
		writer.println("# UTC,x,y,z,dx,dy,dz  Notes: (1) state is in J2000.0 [meters and m/s] (2) UTC is Coordinated Universal Time [Julian Date]");
		writer.println("# step size = " + stepSizeSeconds + " seconds,  Total Propagation Time = " + stopPropagationSeconds + " seconds");
				
		SatelliteTleSGP4 sgp4Sat = (SatelliteTleSGP4)sat;
		
		// the satellite has to be propagated because their are not helper methods for calculating a velocity given a time, there are for the positions though.
		for(int stepNum=0;stepNum<propSteps;stepNum++)
		{
			jd = startTime.getJulianDate() + (stepNum * stepSizeSeconds)/86400.0;
			sgp4Sat.propogate2JulDate( jd );
					
			double[] xyz_pos = sgp4Sat.getJ2000Position();
			double[] xyz_vel = sgp4Sat.getJ2000Velocity();
					
			// Latitude, longitude, and altitude could be easily added through: double[] lla = sgp4Sat.getLLA();		
						
			writer.println(jd + "," +  xyz_pos[0] + "," +  xyz_pos[1] + "," +  xyz_pos[2] + "," +  xyz_vel[0] + "," +  xyz_vel[1] + "," +  xyz_vel[2] );
		}
		
		// finally propagate the satellite back to the original time (required otherwise it can mess up GUI)
		sgp4Sat.propogate2JulDate( startTime.getJulianDate() );
				
		// close file
		writer.close();
		
	}
	else // not a custom satellite
	{
			System.out.println("Not SGP4:" + str);
	}

} // done looping through all satellites

// alert user
System.out.println("Export of SGP4 Ephemeris Plugin Completed.");
JOptionPane.showMessageDialog(jsattrak, "SGP4 export ephemeris plugin completed.  The flat files (one for each satellite) are located in the root directory of JSatTrak.  \n\nDetails and/or errors are displayed in the Log Console.");
